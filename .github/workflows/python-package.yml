# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pip install pytest
        pip install pytest-cov
        pip install pytest-xdist
        pip install pytest-flask
        py.test --doctest-modules --junitxml=junit/test-results.xml --cov=com --cov-report=xml --cov-report=html    
  build-and-deploy-container:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Azure Container Registry Login
        uses: Azure/docker-login@v1
        with:
          # Container registry username
          username: ${{ secrets.REGISTRY_USERNAME }}
          # Container registry password
          password: ${{ secrets.REGISTRY_PASSWORD }}
          # Container registry server url
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}  
      - run: |
            # building creating a new image tags for version control
            docker build . -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/newsapi:${{ github.sha }} -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/newsapi:latest
            docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/newsapi:${{ github.sha }}
            docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/newsapi:latest
            
